version: '3'

services:
  frontend:
    container_name: frontend
    image: ghcr.io/micaeladominguez/snippets-front:0.0.1
    environment:
      NEXT_PUBLIC_API_URL: https://snippetsps-dev.ddns.net
      AUTH0_SECRET: f9f87b9d308a5ce9c5956309b434da2c2dc25fa086e76cce8264ea478fa4fa4f
      AUTH0_BASE_URL: http://localhost:3000
      AUTH0_ISSUER_BASE_URL: https://dev-c4l43o2ndcdikqar.us.auth0.com
      AUTH0_CLIENT_ID: 1E4bHwGjDsGhgkLHcrlk0xemreuSXpnd
      AUTH0_CLIENT_SECRET: ZKsew2YqkwLT2MA9NpaFGQSHIMckYdhwCxl7HFkxt4aFjAizI1RTbR0gX0ooLf2j
    ports:
      - "3000:3000"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    # Watchtower will check for updates every 30 seconds

  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./static/:/usr/share/nginx/html:ro
      - ./dev.conf.d/:/etc/nginx/conf.d/:ro
      - /etc/letsencrypt/:/etc/letsencrypt/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - certbot
#      - manage-repositories
      - testing-scripts
#      - management-service

  certbot:
    image: certbot/certbot:latest
    # command: docker compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ --dry-run -d  snippetsps-dev.ddns.net
    volumes:
      - ./certbot/conf/:/etc/letsencrypt
      - ./certbot/logs/:/var/log/letsencrypt
      - ./certbot/data:/usr/share/nginx/html/letsencrypt


volumes:
  pgdata:
    external: false
